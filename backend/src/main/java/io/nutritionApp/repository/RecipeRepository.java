package io.nutritionApp.repository;

import io.nutritionApp.model.entity.Recipe;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.UUID;

@Repository
public interface RecipeRepository extends JpaRepository<Recipe, UUID> {

    // üîπ –ù–∞–π—Ç–∏ —Ä–µ—Ü–µ–ø—Ç—ã –ø–æ —Ç–µ–≥–∞–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–í–µ–≥–∞–Ω—Å–∫–∞—è" –∏ "–ë–µ–∑–≥–ª—é—Ç–µ–Ω–æ–≤–∞—è")
    @Query("SELECT DISTINCT r FROM Recipe r JOIN r.recipeTags rt WHERE rt.tag.id IN :tagIds")
    List<Recipe> findByRecipeTags(@Param("tagIds") List<UUID> tagIds);

    // üîπ –ù–∞–π—Ç–∏ —Ä–µ—Ü–µ–ø—Ç—ã, –∏—Å–∫–ª—é—á–∞—è –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã

    @Query("""
    SELECT DISTINCT r FROM Recipe r 
    WHERE r.id NOT IN (
        SELECT ri.recipe.id FROM RecipeIngredient ri 
        WHERE ri.ingredient.id IN :excludedIngredients
    )
    """)
    List<Recipe> findByExcludedIngredients(@Param("excludedIngredients") List<UUID> excludedIngredients);


    // üîπ –ù–∞–π—Ç–∏ —Ä–µ—Ü–µ–ø—Ç—ã, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω –∫–∞–ª–æ—Ä–∏–π
    List<Recipe> findByCaloriesBetween(int minCalories, int maxCalories);

    // üîπ –ù–∞–π—Ç–∏ —Å–ª—É—á–∞–π–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ë–î, –≤ PostgreSQL —Ä–∞–±–æ—Ç–∞–µ—Ç `RANDOM()`)
//    @Query("SELECT r FROM Recipe r ORDER BY FUNCTION('RANDOM')")
    @Query(value = "SELECT * FROM recipes ORDER BY RANDOM() LIMIT 1", nativeQuery = true)
    Recipe findRandomRecipe();


}

