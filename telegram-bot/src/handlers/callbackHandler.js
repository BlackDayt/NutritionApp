const fs = require('fs');
const path = require('path');

console.log('üîç callbackHandler.js –∑–∞–≥—Ä—É–∂–µ–Ω'); // –û—Ç–ª–∞–¥–∫–∞

const handlers = {};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –≤—Å–µ—Ö JS-—Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ handlers
const loadHandlers = (dir) => {
    fs.readdirSync(dir).forEach((file) => {
        const fullPath = path.join(dir, file);
        if (fs.statSync(fullPath).isDirectory()) {
            // –ï—Å–ª–∏ —ç—Ç–æ –ø–∞–ø–∫–∞ ‚Äî —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ–º –µ—ë —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
            loadHandlers(fullPath);
        } else if (file.endsWith('.js')) {
            const handlerName = file.replace('.js', ''); // –£–±–∏—Ä–∞–µ–º .js
            const handlerModule = require(fullPath);

            // ‚úÖ –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–∞–º `callbackHandler.js`, —á—Ç–æ–±—ã –Ω–µ –∑–∞–≥—Ä—É–∂–∞—Ç—å –µ–≥–æ
            if (handlerName === 'callbackHandler') {
                console.log('‚è≠ –ü—Ä–æ–ø—É—Å–∫–∞–µ–º callbackHandler.js...');
                return;
            }

            if (!handlerModule || !handlerModule[handlerName]) {
                console.warn(`‚ö† –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ ${handlerName}:`, handlerModule);
            } else {
                console.log(`‚úî –ó–∞–≥—Ä—É–∂–µ–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫: ${handlerName} ->`, handlerModule[handlerName]);
                handlers[handlerName] = handlerModule[handlerName];
            }
        }
    });
};

// –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —Ö—ç–Ω–¥–ª–µ—Ä—ã –∏–∑ –ø–∞–ø–∫–∏ /handlers (–∏ –ø–æ–¥–ø–∞–ø–æ–∫)
loadHandlers(__dirname); // + "/handlers"

const callbackHandler = (bot) => {
    bot.on('callback_query', async (query) => {
        const handler = handlers[query.data]; // –ë–µ—Ä–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ callback_data

        if (handler) {
            await handler(bot, query);
        } else {
            console.warn('–ù–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è:', query.data);
            await bot.answerCallbackQuery(query.id, {text: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞'});
        }
    });
};

module.exports = { callbackHandler };